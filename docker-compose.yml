version: "3.9"

services:

  app:
    build: .
    container_name: app
    working_dir: /app/api
    restart: always
    volumes:
      - ./api/:/app/api/
    command: bash -c "../wait-for-rabbitmq.sh rabbitmq && gunicorn main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000"
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq

  producer:
    build: .
    container_name: producer
    working_dir: /app/data_loader
    restart: always
    volumes:
      - ./data_loader/:/app/data_loader/
    ports:
      - "8081:8081"
    command: bash -c "../wait-for-rabbitmq.sh rabbitmq && python loader.py"
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq

  master:
    image: locustio/locust
    ports:
      - "8089:8089"
    volumes:
      - ./:/mnt/locust
    command: -f /mnt/locust/api/locustfile.py --master -H http://master:8089

  worker:
    image: locustio/locust
    volumes:
      - ./:/mnt/locust
    command: -f /mnt/locust/api/locustfile.py --worker --master-host master

  db:
    image: postgres:15.1-alpine
    container_name: db
    restart: always
    ports:
      - "5432:5432"
    env_file:
    - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    env_file:
      - .env
    ports:
      - "5672:5672"
      - "15672:15672"

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "5050:80"
    env_file:
      - .env
    volumes:
      - pgadmin-data:/var/lib/pgadmin

networks:
  default:
    driver: bridge

volumes:
  postgres_data:
  pgadmin-data:
